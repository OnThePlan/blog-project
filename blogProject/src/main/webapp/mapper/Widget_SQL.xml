<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 
<mapper namespace="admin">
	<!-- 관리자가 만든 카테고리 정보 생성 -->
	<insert id="insert_admin_blog_category" parameterType="hashmap" >
		<![CDATA[
			INSERT INTO admin_blog_category(admin_category_name, admin_category_parent, created_at, updated_at) 
			VALUES (#{admin_category_name}, #{admin_category_parent},SYSDATE(), SYSDATE());
		]]>
	</insert>
	<!--  관리자가 만든 카테고리 정보 수정 -->
	<update id="update_admin_blog_category" parameterType="hashmap" >
		<![CDATA[
			UPDATE admin_blog_category
			SET admin_category_name = #{admin_category_name},
			admin_category_parent= #{admin_category_parent},
			user_id = #{user_id},
			updated_at = SYSDATE()
			WHERE admin_blog_category_id=#{admin_blog_category_id}
		]]>
	</update>
	<!-- 관리자가 만든 카테고리 정보 삭제 -->
	<update id="deleted_admin_blog_category" parameterType="hashmap" >
		<![CDATA[
			UPDATE admin_blog_category
			SET deleted = "Y",
			updated_at = SYSDATE()
			WHERE admin_blog_category_id=#{admin_blog_category_id}
		]]>
	</update>
	<!-- 캍카테고리별 리스트 정보 조회 -->
	<select id="select_admin_blog_category" parameterType="hashmap" resultType="hashmap">
	    <![CDATA[
	        SELECT
	            STORED_FILE_NAME,
	            ORIGINAL_FILE_NAME
	        FROM
	            TB_FILE
	        WHERE
	            IDX = #{IDX}
	    ]]>
	</select>
	<!-- 회원정보 조회 -->
	<select id="selectUsers" parameterType="hashmap" resultType="hashmap">
	    <![CDATA[
	        SELECT first_name, last_name, password, email, nickname, login_timezone, language, facebook_id, naver_id, kakao_id, last_logined_at, created_at, updated_at
			FROM users
			WHERE user_id =#{user_id} AND deleted = "N"
	    ]]>
	</select>
	<!-- 회원 정보 수정 (활성화 등) -->
	<update id="updateUsers" parameterType="hashmap" >
		<![CDATA[
			UPDATE users
			SET 
			first_name = #{first_name}, 
			last_name = #{last_name},
			password = #{password},
			email = #{email},
			nickname = #{nickname},
			login_timezone = #{login_timezone},
			language = #{language},
			facebook_id = #{facebook_id},
			naver_id = #{naver_id},
			kakao_id = #{kakao_id},
			last_logined_at = #{last_logined_at},
			updated_at = SYSDATE()
			WHERE user_id = #{user_id} AND deleted = "N";
		]]>
	</update>
	<!-- 비밀번호 초기화 이메일 전송하기 -->
	<update id="updateUsersPW" parameterType="hashmap" >
		<![CDATA[
			UPDATE users
			SET 
			password = #{password},
			updated_at = SYSDATE()
			WHERE user_id = #{user_id} AND deleted = "N";
		]]>
	</update>
	<!--  블로그 PPT 테마를 생성한다  -->
	<insert id="insertBlogPptTheme" parameterType="hashmap" >
		<![CDATA[
			INSERT INTO blog_ppt_theme(blog_ppt_theme_name, blog_ppt_theme_file_name, file_path, file_system_name, created_at, created_by, updated_at, updated_by) 
			VALUES (#{blog_ppt_theme_name}, #{blog_ppt_theme_file_name}, #{file_path}, #{file_system_name}, SYSDATE(), #{user_id}, SYSDATE(), #{user_id});
		]]>
	</insert>
	<!-- 블로그 PPT 테마를 수정한다. -->
	<update id="updateBlogPptTheme" parameterType="hashmap" >
		<![CDATA[
			UPDATE blog_ppt_theme
			SET 
			blog_ppt_theme_name = #{blog_ppt_theme_name}, 
			blog_ppt_theme_file_name = #{blog_ppt_theme_file_name},
			file_path = #{file_path},
			file_system_name = #{file_system_name},
			updated_by = #{updated_by},
			updated_at = SYSDATE()
			WHERE blog_ppt_theme_id = #{blog_ppt_theme_id} AND deleted = "N"
		]]>
	</update>
	<!-- 블로그 PPT 테마를 삭제한다.. -->
	<update id="deletedBlogPptTheme" parameterType="hashmap" >
		<![CDATA[
			UPDATE blog_ppt_theme
			SET 
			deleted = "Y"
			updated_at = SYSDATE()
			WHERE blog_ppt_theme_id = #{blog_ppt_theme_id}
		]]>
	</update>
	<!-- 블로그 PPT 테마 리스트를 가져온다. -->
	<update id="deletedBlogPptTheme" parameterType="hashmap" >
		<![CDATA[
			SELECT blog_ppt_theme_id, blog_ppt_theme_name, blog_ppt_theme_file_name, file_path, file_system_name, created_at, created_by, updated_at, updated_by  
			FROM blog_ppt_theme
			WHERE deleted ="N"
			ORDER BY updated_at DESC
		]]>
	</update>
</mapper>
